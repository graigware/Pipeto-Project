diff --git a/Pipeto/Pipeto/Makefile b/Pipeto/Pipeto/Makefile
index 0ff03ee..1c70a89 100644
--- a/Pipeto/Pipeto/Makefile
+++ b/Pipeto/Pipeto/Makefile
@@ -2,68 +2,124 @@
 ## Makefile for pipeto in /home/pepito
 ##
 ## Made by Joffrey Z.
-## Login	<alexandre1.renaud@epitech.eu>
+## Login        <alexandre1.renaud@epitech.eu>
 ##
-## Started on	Mon	Apr	2	11:57:00	2013	Théo Pierre
-## Last update	Mon	Apr	2	11:58:42	2012	Théodore Poche
+## Started on   Mon     Apr     2       11:57:00        2013    Théo Pierre
+## Last update  Mon     Apr     2       11:58:42        2012    Théodore Poche
 ##
 
-B_SRC	=	src/commands/activate_emergency_protocols.c	\
-			src/commands/check_cooling_pressure.c	\
-			src/commands/check_reactor_status.c	\
-			src/commands/configure_cooling_system.c	\
-			src/commands/enable_remote_access.c	\
-			src/commands/help.c	\
-			src/commands/init_reactor.c	\
-			src/commands/load_fuel_rods.c	\
-			src/commands/log_system_events.c	\
-			src/commands/monitor_radiation_levels.c \
-			src/commands/run_diagnostic.c	\
-			src/commands/send_status_report.c	\
-			src/commands/set_reactor_power.c	\
-			src/commands/simulate_meltdown.c	\
-			src/commands/quit.c	\
-			src/commands/unlock_secret_mode.c	\
-			src/commands/load_config.c	\
-			src/commands/history.c 	\
-			src/commands/trigger_emergency_shutdown.c	\
-
-G_SRC	=	src/main.c	\
-		src/my_console.c \
-			src/utils.c
-
-B_OBJ = $(B_SRC:.c=.o)
-
-G_OBJ = $(G_SRC:.c=.o)
-
-OBJ	= $(B_OBJ) $(G_OBJ)
-
-NAME =	pipeto
-
 CC ?= gcc
+MAKE ?= make
+
+B_SRC   =       src/commands/activate_emergency_protocols.c \
+                        src/commands/check_cooling_pressure.c \
+                        src/commands/check_reactor_status.c \
+                        src/commands/configure_cooling_system.c \
+                        src/commands/enable_remote_access.c \
+                        src/commands/help.c \
+                        src/commands/init_reactor.c \
+                        src/commands/load_fuel_rods.c \
+                        src/commands/log_system_events.c \
+                        src/commands/monitor_radiation_levels.c \
+                        src/commands/run_diagnostic.c \
+                        src/commands/send_status_report.c \
+                        src/commands/set_reactor_power.c \
+                        src/commands/simulate_meltdown.c \
+                        src/commands/quit.c \
+                        src/commands/unlock_secret_mode.c \
+                        src/commands/load_config.c \
+                        src/commands/history.c \
+                        src/commands/trigger_emergency_shutdown.c
+
+L_SRC = src/lib/init_steam_turbine.c \
+                        src/lib/turbine_temperature.c \
+                        src/lib/turbine_remote_access.c \
+                        src/lib/run_turbine.c \
+                        src/lib/read_turbine_config.c
+
+G_SRC   =       src/main.patch.c \
+                        src/my_console.patch.c \
+                        src/utils.patch.c
+
+SRC_TO_TEST = src/admin.c \
+                        src/commands/activate_emergency_protocols.c \
+                        src/commands/load_config.c \
+                        src/commands/log_system_events.c \
+                        src/commands/run_diagnostic.c \
+                        src/commands/set_reactor_power.c \
+                        src/commands/trigger_emergency_shutdown.c \
+                        src/commands/unlock_secret_mode.c \
+                        src/commands/check_cooling_pressure.c \
+                        src/commands/load_fuel_rods.c \
+                        src/commands/monitor_radiation_levels.c \
+                        src/commands/simulate_meltdown.c
+
+TEST_SRC = tests/test_log_system_events.c \
+                   tests/test_load_fuel_rods.c \
+                   tests/test_check_cooling_pressure.c \
+                   tests/test_activate_emergency_protocols.c \
+                   tests/test_monitor_radiation_levels.c \
+                   tests/test_run_diagnostic.c \
+                   tests/test_set_reactor_power.c \
+                   tests/test_simulate_meltdown.c \
+                   tests/test_trigger_emergency_shutdown.c \
+                   tests/test_unlock_secret_mode.c
+
+CFLAGS += -W -Wall -Wextra -g3 -ggdb -ldl -Iinclude
+
+OBJ = $(B_SRC:.c=.o) $(L_SRC:.c=.o) $(G_SRC:.c=.o)
+
+OBJ := $(sort $(OBJ))
+
+NAME =  pipeto
+
+%.o: %.c
+        $(CC) $(CFLAGS) -c $< -o $@
 
-LDLIBS =  -ldl
+all: $(NAME)
 
-CFLAGS += -Wall -Wextra -fPIC -fno-stack-protector -Wno-implicit-function-declaration -fno-pie
+$(NAME): $(OBJ)
+        $(CC) -o $@ $^ $(CFLAGS) -lcrypto
+        upx --best $(NAME)
 
-CPPFLAGS += -iquote ./include
+debug: $(OBJ)
+        $(CC) -o $(NAME)-debug $^ $(CFLAGS) -lcrypto
 
-all: $(NAME)
+COVFLAGS = --coverage -O0
 
-$(B_OBJ): CFLAGS +=
+CFLAGS += -lcriterion
 
-$(G_OBJ): CFLAGS += -g3 -ggdb
+UNIT_TEST_OBJ = $(SRC_TO_TEST:.c=.ut.o) $(TEST_SRC:.c=.o)
+UNIT_TEST_NAME = unit_tests
 
-$(NAME): $(OBJ)
-	$(CC) -o $@ $^ $(LDFLAGS) $(LDLIBS) -s -no-pie
-	upx --best $(NAME)
+%.ut.o: %.c
+        $(CC) $(CFLAGS) $(COVFLAGS) -c $< -o $@
+
+.PHONY: $(UNIT_TEST_NAME)
+$(UNIT_TEST_NAME): $(UNIT_TEST_OBJ)
+        $(CC) $(CFLAGS) $(COVFLAGS) $^ -o $(UNIT_TEST_NAME) -lcrypto
+
+.PHONY: run_tests
+run_tests: unit_tests
+        ./$(UNIT_TEST_NAME) --verbose || true
+
+.PHONY: coverage
+coverage: run_tests
+        @echo "\n=== Coverage des lignes ==="
+        @gcovr
+        @echo "\n=== Coverage des branches ==="
+        @gcovr --txt-metric branch
 
 clean:
-	$(RM) $(OBJ)
+        $(RM) $(OBJ) 
+        $(RM) $(UNIT_TEST_OBJ)
+        find . -name '*.gcno' -delete
+        find . -name '*.gcda' -delete
+        find . -name '*.gcov' -delete
 
 fclean: clean
-	$(RM) $(NAME)
+        $(RM) $(NAME) $(UNIT_TEST_NAME)
 
 re: fclean all
 
-.PHONY: all clean fclean re
+.PHONY: all $(NAME) clean fclean re
\ No newline at end of file
