diff --git a/Pipeto/Pipeto/src/commands/activate_emergency_protocols.c b/Pipeto/Pipeto/src/commands/activate_emergency_protocols.c
index 2621b27..aedefda 100644
--- a/Pipeto/Pipeto/src/commands/activate_emergency_protocols.c
+++ b/Pipeto/Pipeto/src/commands/activate_emergency_protocols.c
@@ -8,23 +8,62 @@
 #include <stdio.h>
 #include <string.h>
 #include <stdbool.h>
+#include <openssl/sha.h>
+#include <openssl/crypto.h>
 #include "pipeto.h"
 
-void activate_emergency_protocols()
+static void encrypted_flag(void)
 {
-    char input[100];
-    
+    unsigned char enc_flag[] = {0xf4, 0x71, 0xc7, 0xb7, 0x04, 0x8e, 0xd9,
+        0x33, 0xf2, 0x8a, 0x4a, 0xce, 0x2e, 0xe2, 0x57, 0x1e, 0xce, 0x26,
+        0x8f, 0xc4, 0xe5, 0xf8, 0x92, 0xa6, 0x53, 0xd1, 0x7f, 0xba, 0x9c,
+        0x0c, 0x51, 0x98, 0xad, 0xae, 0xff, 0x53, 0x91, 0xec, 0xce, 0xf3, 0x00,
+        0x43, 0x2c, 0xd6, 0x1b, 0xe0, 0x70, 0x81, 0x51, 0x42, 0xb4, 0xc7};
+    unsigned char keys[] = {0x8f, 0x34, 0xaa, 0xd2, 0x76, 0xe9, 0xbc, 0x5d,
+        0x91, 0xf3, 0x6a, 0xbe, 0x5c, 0x8d, 0x23, 0x71, 0xad, 0x49, 0xe3,
+        0xb7, 0xc5, 0x99, 0xf1, 0xd2, 0x3a, 0xa7, 0x1e, 0xce, 0xf9, 0x68,
+        0x7d, 0xb8, 0xd4, 0xc1, 0x8a, 0x73, 0xf0, 0x9e, 0xab, 0xd3, 0x6e, 0x2c,
+        0x5b, 0xf6, 0x7a, 0x84, 0x1d, 0xe8, 0x3f, 0x62, 0x95, 0xba, 0x4c};
+    char decrypted[53];
+
+    for (unsigned int i = 0; i < sizeof(enc_flag); i++)
+        decrypted[i] = enc_flag[i] ^ keys[i];
+    decrypted[52] = '\0';
+    printf("%s\n", decrypted);
+}
+
+void hashing_password(char input[])
+{
+    unsigned char digest[SHA512_DIGEST_LENGTH] = {0};
+    unsigned char stored_hash[64] = {
+        0x7f, 0xcf, 0x4b, 0xa3, 0x91, 0xc4, 0x87, 0x84,
+        0xed, 0xde, 0x59, 0x98, 0x89, 0xd6, 0xe3, 0xf1,
+        0xe4, 0x7a, 0x27, 0xdb, 0x36, 0xec, 0xc0, 0x50,
+        0xcc, 0x92, 0xf2, 0x59, 0xbf, 0xac, 0x38, 0xaf,
+        0xad, 0x2c, 0x68, 0xa1, 0xae, 0x80, 0x4d, 0x77,
+        0x07, 0x5e, 0x8f, 0xb7, 0x22, 0x50, 0x3f, 0x3e,
+        0xca, 0x2b, 0x2c, 0x10, 0x06, 0xee, 0x6f, 0x6c,
+        0x7b, 0x76, 0x28, 0xcb, 0x45, 0xff, 0xfd, 0x1d
+    };
+
+    SHA512((const unsigned char *)input, strlen(input), digest);
+    if (CRYPTO_memcmp(digest, stored_hash, SHA512_DIGEST_LENGTH) == 0) {
+        encrypted_flag();
+        IS_ADMIN = true;
+    }
+}
+
+void activate_emergency_protocols(void)
+{
+    char input[100] = {0};
+
     printf("Enter emergency password: ");
     fgets(input, sizeof(input), stdin);
     input[strcspn(input, "\n")] = 0;
-
     if (strlen(input) == 0) {
         printf("No password entered, emergency protocols not activated.\n");
         return;
     }
-    if (strcmp(input, "admin123") == 0) {
-        printf("{Emergency protocols activated, you are now admin !}\n");
-        IS_ADMIN = true;
-    }
+    hashing_password(input);
     return;
 }
